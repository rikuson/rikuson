name: Build and Deploy to Netlify
on:
  push:
  pull_request:
  workflow_dispatch:
env:
  TZ: Asia/Tokyo
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Cache jekyll
        uses: actions/cache@v4
        with:
          path: _cache
          key: jekyll-${{ hashFiles('**/*.md', 'Gemfile.lock') }}
          restore-keys: jekyll-
      - name: Build jekyll
        run: bundle exec jekyll build

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-
      - name: Install utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install jq yq
      - name: Install dependencies
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          npm install terser -g
          curl -LO https://github.com/WebAssembly/binaryen/releases/download/version_119/binaryen-version_119-x86_64-linux.tar.gz
          tar -xzf binaryen-version_119-x86_64-linux.tar.gz
          sudo cp binaryen-version_119/bin/* /usr/local/bin/
      - name: Build wasm
        run: cargo run --features=bin ../_site/index.json
        working-directory: tinysearch

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache Modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: node-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install npm packages
        run: npm ci
      - name: Build js
        run: npm run build
      - name: Rebuild jekyll
        run: bundle exec jekyll build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: "./_site"
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5
